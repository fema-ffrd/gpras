name: Release

on:
  push:
    branches: [ "main" ]
    paths:
      - 'gpras/**'

  workflow_dispatch:

permissions:
  contents: write

jobs:
  release:
    name: release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.12']
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Print Python version
        run: python --version
      - name: Install release dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build twine
      - name: Extract version from gpras version
        id: get_version
        shell: pwsh
        run: |
          $version = python -c "import gpras; print(gpras.__version__);"
          echo "::set-output name=VERSION::$version"
      - name: Build wheel and source distribution
        run: python -m build
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.VERSION }}
          release_name: Release v${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
      - name: List dist directory contents again
        run: dir dist
      - name: Upload Source Distribution
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/gpras-${{ steps.get_version.outputs.VERSION }}.tar.gz
          asset_name: gpras-v${{ steps.get_version.outputs.VERSION }}.tar.gz
          asset_content_type: application/gzip
